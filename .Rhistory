# Instalación y carga de paquetes necesarios
## Para manipulación de datos
if (!require(tidyverse)) install.packages("tidyverse")
## Para estadísticas descriptivas
if (!require(psych)) install.packages("psych")
## Para exploración automática
if (!require(DataExplorer)) install.packages("DataExplorer")
# Cargar el dataset iris
data(iris)
# Explorar la estructura del dataset
str(iris)
# Visualizar las primeras observaciones
head(iris)
# Visualizar las últimas observaciones
tail(iris)
# Obtener las dimensiones del dataset
dim(iris)
# Resumen básico del dataset
summary(iris)
# Resumen básico del dataset
summary(iris)
# Calcular la media para la longitud del sépalo
mean(iris$Sepal.Length)
# Calcular la mediana para la longitud del sépalo
median(iris$Sepal.Length)
# Calcular el rango para la longitud del sépalo
range(iris$Sepal.Length)
diff(range(iris$Sepal.Length))
# Obtener el valor minimo y máximo de la logitud del sépalo
range(iris$Sepal.Length)
# Calcular el rango para la longitud del sépalo
diff(range(iris$Sepal.Length))
# Calcular la varianza para la longitud del sépalo
var(iris$Sepal.Length)
# Calcular la desviación estándar para la longitud del sépalo
sd(iris$Sepal.Length)
# Función para calcular el coeficiente
cv <- function(x) {
(sd(x) / mean(x)) * 100
}
# Calcular el coeficiente de variación para la longitud del sépalo
cv(iris$Sepal.Length)
# Función para calcular el coeficiente de variación
cv <- function(x) {
(sd(x) / mean(x)) * 100
}
# Calcular el coeficiente de variación para la longitud del sépalo
cv(iris$Sepal.Length)
# Calcular el coeficiente de variación para la longitud del sépalo
(sd(iris$Sepal.Length) / mean(iris$Sepal.Length)) * 100
# Función para calcular la moda
moda <- function(x) {
# Eliminar valores NA
x <- na.omit(x)
# Verificar si el vector está vacío
if (length(x) == 0) return(NA_character_)
# Calcular la frecuencia de cada valor
tabla <- table(x)
# Identificar el/los valores con mayor frecuencia
max_frecuencia <- max(tabla)
modas <- names(tabla[tabla == max_frecuencia])
# Verificar si todos los valores son únicos (sin moda)
if (max_frecuencia == 1) return(NA_character_)
# Retornar la moda como un string separado por comas
return(paste(modas, collapse = ", "))
}
View(iris)
# Calcular cuartiles para la longitud del sépalo
quantile(iris$Sepal.Length, probs = c(0.25, 0.5, 0.75))
# Calcular Q1 y Q3 por separado
Q1 <- quantile(iris$Sepal.Length, 0.25)
Q3 <- quantile(iris$Sepal.Length, 0.75)
# Rango intercuartílico
IQR(iris$Sepal.Length)
# Calcular cuartiles para la longitud del sépalo
quantile(iris$Sepal.Length, probs = c(0.25, 0.5, 0.75))
# Calcular Q1 y Q3 por separado
Q1 <- quantile(iris$Sepal.Length, 0.25); Q1
Q3 <- quantile(iris$Sepal.Length, 0.75); Q2
# Rango intercuartílico
IQR(iris$Sepal.Length)
# Calcular cuartiles para la longitud del sépalo
quantile(iris$Sepal.Length, probs = c(0.25, 0.5, 0.75))
# Calcular Q1 y Q3 por separado
Q1 <- quantile(iris$Sepal.Length, 0.25); Q1
Q3 <- quantile(iris$Sepal.Length, 0.75); Q3
# Rango intercuartílico
IQR(iris$Sepal.Length)
# Calcular percentiles específicos
quantile(iris$Sepal.Length, probs = c(0.10, 0.90))
# Calcular el percentil 95
quantile(iris$Sepal.Length, 0.95)
# Calcular múltiples percentiles
percentiles <- seq(0.1, 0.9, by = 0.1)
quantile(iris$Sepal.Length, probs = percentiles)
# Calcular percentiles específicos
quantile(iris$Sepal.Length, c(0.10, 0.90))
# Calcular el percentil 95
quantile(iris$Sepal.Length, 0.95)
# Análisis descriptivo completo del dataset iris
describe(iris[,1:4])
# Análisis por especie
describeBy(iris[,1:4], iris$Species)
# Análisis descriptivo completo del dataset iris
describe(iris[,1:4])
# Análisis descriptivo por especie usando dplyr
iris %>%
group_by(Species) %>%
summarise(
n = n(),
Media = mean(Sepal.Length),
Mediana = median(Sepal.Length),
DE = sd(Sepal.Length),
Varianza = var(Sepal.Length),
Q1 = quantile(Sepal.Length, 0.25),
Q3 = quantile(Sepal.Length, 0.75),
CV = (sd(Sepal.Length)/mean(Sepal.Length))*100
)
# Ejemplo de preparación de datos para ANOVA
# Simulando datos experimentales con tratamientos y repeticiones
set.seed(123)
datos_experimentales <- data.frame(
Tratamiento = rep(c("A", "B", "C"), each = 12),
Repeticion = rep(1:4, times = 9),
Longitud_Sepalo = c(iris$Sepal.Length[1:36])
)
# Calcular medias por tratamiento y repetición
resultado <- aggregate(datos_experimentales[["Longitud_Sepalo"]],
by = list(Tratamiento = datos_experimentales[["Tratamiento"]],
Repeticion = datos_experimentales[["Repeticion"]]),
FUN = mean, na.rm = TRUE)
# Visualizar el resultado
print(resultado)
# Ejemplo de preparación de datos para ANOVA
# Simulando datos experimentales con tratamientos y Bloques
set.seed(123)
datos_experimentales <- data.frame(
Tratamiento = rep(c("A", "B", "C"), each = 12),
Bloque = rep(1:4, times = 9),
Longitud_Sepalo = c(iris$Sepal.Length[1:36])
)
# Calcular medias por tratamiento y repetición
resultado <- aggregate(datos_experimentales[["Longitud_Sepalo"]],
by = list(Tratamiento = datos_experimentales[["Tratamiento"]],
Repeticion = datos_experimentales[["Bloque"]]),
FUN = mean, na.rm = TRUE)
# Visualizar el resultado
print(resultado)
# Ejemplo de preparación de datos para ANOVA
# Simulando datos experimentales con tratamientos y Bloques
set.seed(123)
datos_experimentales <- data.frame(
Tratamiento = rep(c("A", "B", "C"), each = 12),
Bloque = rep(1:4, times = 9),
Longitud_Sepalo = c(iris$Sepal.Length[1:36])
)
# Calcular medias por tratamiento y repetición
resultado <- aggregate(datos_experimentales[["Longitud_Sepalo"]],
by = list(Tratamiento = datos_experimentales[["Tratamiento"]],
Repeticion = datos_experimentales[["Bloque"]]),
FUN = mean, na.rm = TRUE)
# Visualizar el resultado
print(resultado)
# Ejemplo de preparación de datos para ANOVA
# Simulando datos experimentales con tratamientos y Bloques
set.seed(123)
datos_experimentales <- data.frame(
Tratamiento = rep(c("A", "B", "C"), each = 12),
Bloque = rep(1:4, times = 9),
Longitud_Sepalo = c(iris$Sepal.Length[1:36])
)
# Calcular medias por tratamiento y repetición
resultado <- aggregate(datos_experimentales[["Longitud_Sepalo"]],
by = list(Tratamiento = datos_experimentales[["Tratamiento"]],
Bloque = datos_experimentales[["Bloque"]]),
FUN = mean, na.rm = TRUE)
# Visualizar el resultado
print(resultado)
# Ejemplo adicional: calcular múltiples estadísticas
resultado_completo <- aggregate(datos_experimentales[["Longitud_Sepalo"]],
by = list(Tratamiento = datos_experimentales[["Tratamiento"]]),
FUN = function(x) c(Media = mean(x, na.rm = TRUE),
DE = sd(x, na.rm = TRUE),
n = length(x)))
print(resultado_completo)
# Ejemplo adicional: calcular múltiples estadísticas
resultado_completo <- aggregate(datos_experimentales[["Longitud_Sepalo"]],
by = list(Tratamiento = datos_experimentales[["Tratamiento"]]),
FUN = function(x) c(Media = mean(x, na.rm = TRUE),
DE = sd(x, na.rm = TRUE),
n = length(x)))
print(resultado_completo)
View(resultado_completo)
# Ejemplo adicional: calcular múltiples estadísticas
resultado_completo <- aggregate(datos_experimentales[["Longitud_Sepalo"]],
by = list(Tratamiento = datos_experimentales[["Tratamiento"]]),
FUN = function(x) c(Media = mean(x, na.rm = TRUE),
DE = sd(x, na.rm = TRUE),
n = length(x)))
resultado_completo
# Ejemplo adicional: calcular múltiples estadísticas
resultado_completo <- aggregate(datos_experimentales[["Longitud_Sepalo"]],
by = list(Tratamiento = datos_experimentales[["Tratamiento"]]),
FUN = function(x) c(Media = mean(x, na.rm = TRUE),
DE = sd(x, na.rm = TRUE),
n = length(x)))
resultado_completo
# Diagrama de caja para visualizar cuartiles
ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Distribución de la Longitud del Sépalo por Especie",
y = "Longitud del Sépalo (cm)")
# Diagrama de caja para visualizar la longitud del sépalo por especie
ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Distribución de la Longitud del Sépalo por Especie",
y = "Longitud del Sépalo (cm)")
# Histograma de la longitud del sépalo
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.2, fill = "steelblue", color = "black") +
theme_minimal() +
labs(title = "Distribución de la Longitud del Sépalo",
x = "Longitud del Sépalo (cm)",
y = "Frecuencia")
# Histograma de la longitud del sépalo
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.1, fill = "steelblue", color = "black") +
theme_minimal() +
labs(title = "Distribución de la Longitud del Sépalo",
x = "Longitud del Sépalo (cm)",
y = "Frecuencia")
# Histograma de la longitud del sépalo
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.2, fill = "steelblue", color = "black") +
theme_minimal() +
labs(title = "Distribución de la Longitud del Sépalo",
x = "Longitud del Sépalo (cm)",
y = "Frecuencia")
# Histograma de la longitud del sépalo
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.1, fill = "steelblue", color = "black") +
theme_minimal() +
labs(title = "Distribución de la Longitud del Sépalo",
x = "Longitud del Sépalo (cm)",
y = "Frecuencia")
# Histograma de la longitud del sépalo
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.4, fill = "steelblue", color = "black") +
theme_minimal() +
labs(title = "Distribución de la Longitud del Sépalo",
x = "Longitud del Sépalo (cm)",
y = "Frecuencia")
# Histograma de la longitud del sépalo
ggplot(iris, aes(x = Sepal.Length)) +
geom_histogram(binwidth = 0.1, fill = "steelblue", color = "black") +
theme_minimal() +
labs(title = "Distribución de la Longitud del Sépalo",
x = "Longitud del Sépalo (cm)",
y = "Frecuencia")
# Gráfico de dispersión entre la longitud y el ancho del sépalo
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point() +
theme_minimal() +
labs(title = "Relación entre Longitud y Ancho del Sépalo",
x = "Longitud del Sépalo (cm)",
y = "Ancho del Sépalo (cm)")
# Gráfico de barras de la frecuencia de cada especie
ggplot(data = iris, aes(x = Species, fill = Species)) +
geom_bar() +
theme_minimal() +
labs(title = "Frecuencia de Cada Especie",
x = "Especie",
y = "Frecuencia")
